@model PaymentProcessing.Web.Models.PaymentViewModel

@{
    ViewBag.Title = "Process Payment";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="payment-form">
            <h2 class="text-center mb-4">
                <i class="fas fa-credit-card"></i> Process Payment
            </h2>

            @using (Html.BeginForm("Process", "Payment", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Amount, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @type = "number", @step = "0.01", @min = "0.01", @placeholder = "0.00" })
                            @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Currency, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.Currency, new SelectList(new[] { "USD", "EUR", "GBP", "CAD" }), new { @class = "form-select" })
                            @Html.ValidationMessageFor(m => m.Currency, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.CardNumber, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.CardNumber, new { @class = "form-control", @placeholder = "1234 5678 9012 3456", @maxlength = "19" })
                    @Html.ValidationMessageFor(m => m.CardNumber, "", new { @class = "text-danger" })
                    <div class="form-text">Use test numbers: 4111111111111111 (Approved), 4111111111111119 (Declined), 4111111111111110 (Error)</div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.CardHolderName, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.CardHolderName, new { @class = "form-control", @placeholder = "John Doe" })
                    @Html.ValidationMessageFor(m => m.CardHolderName, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            @Html.LabelFor(m => m.ExpiryMonth, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.ExpiryMonth, 
                                new SelectList(Enumerable.Range(1, 12).Select(i => new { Value = i, Text = i.ToString("00") }), "Value", "Text"), 
                                "Month", new { @class = "form-select" })
                            @Html.ValidationMessageFor(m => m.ExpiryMonth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            @Html.LabelFor(m => m.ExpiryYear, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.ExpiryYear, 
                                new SelectList(Enumerable.Range(DateTime.Now.Year, 10).Select(i => new { Value = i, Text = i.ToString() }), "Value", "Text"), 
                                "Year", new { @class = "form-select" })
                            @Html.ValidationMessageFor(m => m.ExpiryYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            @Html.LabelFor(m => m.CVV, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.CVV, new { @class = "form-control", @placeholder = "123", @maxlength = "4" })
                            @Html.ValidationMessageFor(m => m.CVV, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.CustomerEmail, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.CustomerEmail, new { @class = "form-control", @type = "email", @placeholder = "customer@example.com" })
                    @Html.ValidationMessageFor(m => m.CustomerEmail, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = "3", @placeholder = "Payment description (optional)" })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-credit-card"></i> Process Payment
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Format card number input
        $('#CardNumber').on('input', function() {
            var value = $(this).val().replace(/\s+/g, '').replace(/[^0-9]/gi, '');
            var formattedValue = value.match(/.{1,4}/g)?.join(' ') || value;
            $(this).val(formattedValue);
        });

        // Validate form on submit
        $('form').on('submit', function(e) {
            if (!this.checkValidity()) {
                e.preventDefault();
                e.stopPropagation();
            }
            $(this).addClass('was-validated');
        });
    </script>
}
